import { PrismaClient } from '@prisma/client'
import fs from 'fs'
import path from 'path'

// Load image mapping
const imageMappingPath = path.join(process.cwd(), 'scripts', 'image-mapping.json')
const imageMapping = fs.existsSync(imageMappingPath) 
  ? JSON.parse(fs.readFileSync(imageMappingPath, 'utf-8'))
  : {}

const prisma = new PrismaClient()

// Helper function to create slug from name
function createSlug(name: string): string {
  return name
    .toLowerCase()
    .replace(/[^a-z0-9\s-]/g, '')
    .replace(/\s+/g, '-')
    .replace(/-+/g, '-')
    .trim()
}

// Helper function to parse price from TND string
function parsePrice(priceStr: string): number {
  const price = parseFloat(priceStr.replace(/[^\d.,]/g, '').replace(',', '.'))
  // Convert TND to EUR (approximate rate: 1 TND = 0.3 EUR)
  return Math.round(price * 0.3 * 100) / 100
}

// Helper function to generate SKU from name
function generateSKU(name: string): string {
  const words = name.split(' ')
  const brand = 'FP'
  const product = words.slice(1, 3).map(w => w.substring(0, 3).toUpperCase()).join('')
  const random = Math.floor(Math.random() * 1000).toString().padStart(3, '0')
  return `${brand}-${product}-${random}`
}

// Helper function to map category to appropriate attributes
function getCategoryAttributes(category: string) {
  const categoryMap: Record<string, any> = {
    'Compl√©ments Alimentaires': {
      type: 'supplement',
      form: 'capsules',
      target: 'adults'
    },
    'Minceur': {
      type: 'weight_management',
      form: 'capsules',
      target: 'adults'
    },
    'Stimulants Sexuels': {
      type: 'sexual_health',
      form: 'tablets',
      target: 'adults'
    },
    'Cheveux, peau, ongles': {
      type: 'beauty_health',
      form: 'tablets',
      target: 'adults'
    },
    'Draineurs et Detox': {
      type: 'detox',
      form: 'liquid',
      target: 'adults'
    },
    'FORME ET VITALITE': {
      type: 'energy_vitality',
      form: 'tablets',
      target: 'adults'
    },
    'Coffrets': {
      type: 'gift_set',
      form: 'mixed',
      target: 'adults'
    },
    'Bruleur de Graisse': {
      type: 'fat_burner',
      form: 'capsules',
      target: 'adults'
    },
    'soins anti-√¢ge et anti-rides': {
      type: 'anti_aging',
      form: 'capsules',
      target: 'adults'
    },
    'Deals de la semaine': {
      type: 'special_offer',
      form: 'tablets',
      target: 'adults'
    },
    'Stress et anxi√©t√©': {
      type: 'stress_relief',
      form: 'tablets',
      target: 'adults'
    },
    'Coupe Faim et sati√©t√©': {
      type: 'appetite_control',
      form: 'capsules',
      target: 'adults'
    },
    'Articulations': {
      type: 'joint_health',
      form: 'tablets',
      target: 'adults'
    },
    'Complements alimentaires b√©b√©s et enfants': {
      type: 'children_supplement',
      form: 'chewable',
      target: 'children'
    }
  }
  
  return categoryMap[category] || {
    type: 'supplement',
    form: 'capsules',
    target: 'adults'
  }
}

// Helper function to generate description based on product name and category
function generateDescription(name: string, category: string): string {
  const baseDescriptions: Record<string, string> = {
    'Minceur': 'Formule minceur avanc√©e pour accompagner votre perte de poids de mani√®re naturelle et efficace.',
    'Draineurs et Detox': 'Solution drainante naturelle pour √©liminer les toxines et favoriser le bien-√™tre.',
    'FORME ET VITALITE': 'Compl√©ment alimentaire pour retrouver √©nergie et vitalit√© au quotidien.',
    'Bruleur de Graisse': 'Formule br√ªle-graisse puissante pour optimiser votre m√©tabolisme et votre silhouette.',
    'soins anti-√¢ge et anti-rides': 'Soin anti-√¢ge intensif pour pr√©server la jeunesse et l\'√©lasticit√© de votre peau.',
    'Stress et anxi√©t√©': 'Solution naturelle pour g√©rer le stress et retrouver s√©r√©nit√© et bien-√™tre mental.',
    'Coupe Faim et sati√©t√©': 'Aide naturelle pour contr√¥ler l\'app√©tit et maintenir une sensation de sati√©t√©.',
    'Articulations': 'Formule sp√©cialement con√ßue pour maintenir la mobilit√© et le confort articulaire.',
    'Cheveux, peau, ongles': 'Compl√©ment beaut√© pour des cheveux, une peau et des ongles en pleine sant√©.',
    'Stimulants Sexuels': 'Formule naturelle pour optimiser la performance et le bien-√™tre intime.',
    'Complements alimentaires b√©b√©s et enfants': 'Compl√©ment alimentaire sp√©cialement formul√© pour les besoins nutritionnels des enfants.'
  }
  
  const baseDesc = baseDescriptions[category] || 'Compl√©ment alimentaire de qualit√© sup√©rieure pour votre bien-√™tre quotidien.'
  
  return `${baseDesc} ${name} de Forte Pharma, une marque reconnue pour la qualit√© et l'efficacit√© de ses produits.`
}

// Helper function to generate highlights based on product name
function generateHighlights(name: string, category: string): string {
  const highlights: string[] = []
  
  if (name.toLowerCase().includes('gelules') || name.toLowerCase().includes('g√©lules')) {
    highlights.push('‚Ä¢ Format g√©lules faciles √† avaler')
  }
  if (name.toLowerCase().includes('comprimes') || name.toLowerCase().includes('comprim√©s')) {
    highlights.push('‚Ä¢ Format comprim√©s pratiques')
  }
  if (name.toLowerCase().includes('sticks')) {
    highlights.push('‚Ä¢ Format sticks nomades')
  }
  if (name.toLowerCase().includes('ampoules')) {
    highlights.push('‚Ä¢ Format ampoules pour une absorption optimale')
  }
  if (name.toLowerCase().includes('500ml')) {
    highlights.push('‚Ä¢ Format 500ml √©conomique')
  }
  if (name.toLowerCase().includes('2 x') || name.toLowerCase().includes('duo')) {
    highlights.push('‚Ä¢ Pack duo √©conomique')
  }
  
  // Category-specific highlights
  if (category === 'Minceur' || category === 'Bruleur de Graisse') {
    highlights.push('‚Ä¢ Formule minceur efficace')
    highlights.push('‚Ä¢ R√©sultats visibles rapidement')
  }
  if (category === 'Draineurs et Detox') {
    highlights.push('‚Ä¢ Action drainante naturelle')
    highlights.push('‚Ä¢ √âlimination des toxines')
  }
  if (category === 'soins anti-√¢ge et anti-rides') {
    highlights.push('‚Ä¢ Action anti-√¢ge intensive')
    highlights.push('‚Ä¢ Pr√©serve la jeunesse de la peau')
  }
  if (category === 'Stress et anxi√©t√©') {
    highlights.push('‚Ä¢ Action apaisante naturelle')
    highlights.push('‚Ä¢ Aide √† g√©rer le stress')
  }
  
  highlights.push('‚Ä¢ Marque Forte Pharma reconnue')
  highlights.push('‚Ä¢ Qualit√© et efficacit√© garanties')
  
  return highlights.join('\n')
}

async function importFortePharmaProducts() {
  console.log('üå± Starting Forte Pharma products import...')

  try {
    // First, create or get the Forte Pharma brand
    const fortePharmaBrand = await prisma.brand.upsert({
      where: { slug: 'forte-pharma' },
      update: {},
      create: {
        name: 'Forte Pharma',
        slug: 'forte-pharma',
        description: 'Forte Pharma est une marque fran√ßaise sp√©cialis√©e dans les compl√©ments alimentaires et produits de bien-√™tre. Depuis plus de 20 ans, Forte Pharma d√©veloppe des formules innovantes et efficaces pour r√©pondre aux besoins de sant√© et de beaut√©.',
        logo_url: '/placeholder-logo.svg',
        is_active: true,
      },
    })

    console.log(`‚úÖ Brand created/found: ${fortePharmaBrand.name}`)

    // Read and parse CSV file
    const csvPath = path.join(process.cwd(), 'FortePharmaProducts.csv')
    const csvContent = fs.readFileSync(csvPath, 'utf-8')
    const lines = csvContent.split('\n').slice(1) // Skip header

    let importedCount = 0
    let skippedCount = 0

    for (const line of lines) {
      if (!line.trim()) continue

      const columns = line.split(',')
      if (columns.length < 9) continue

      try {
        const [
          webScraperOrder,
          webScraperStartUrl,
          paginationSelector,
          imageSrc,
          data,
          priceCurrency,
          data2,
          data3,
          category
        ] = columns

        // Clean up the data
        const name = data3?.replace(/"/g, '').trim()
        const priceStr = data2?.replace(/"/g, '').trim()
        const imageUrl = imageSrc?.replace(/"/g, '').trim()
        const localImageUrl = imageUrl ? imageMapping[imageUrl] || '/placeholder.jpg' : '/placeholder.jpg'
        const categoryName = category?.replace(/"/g, '').trim()

        if (!name || !priceStr) {
          console.log(`‚ö†Ô∏è Skipping product: missing name or price`)
          skippedCount++
          continue
        }

        const price = parsePrice(priceStr)
        const slug = createSlug(name)
        const sku = generateSKU(name)
        const attributes = getCategoryAttributes(categoryName)
        const description = generateDescription(name, categoryName)
        const highlights = generateHighlights(name, categoryName)

        // Determine product form and servings
        let servingsPerContainer = 30
        let netContent = '30 unit√©s'
        let dosage = 'Prendre 1 √† 2 unit√©s par jour'
        let form = 'capsules'

        if (name.toLowerCase().includes('30')) {
          servingsPerContainer = 30
          netContent = '30 unit√©s'
        } else if (name.toLowerCase().includes('60')) {
          servingsPerContainer = 60
          netContent = '60 unit√©s'
        } else if (name.toLowerCase().includes('120')) {
          servingsPerContainer = 120
          netContent = '120 unit√©s'
        } else if (name.toLowerCase().includes('14')) {
          servingsPerContainer = 14
          netContent = '14 unit√©s'
        } else if (name.toLowerCase().includes('15')) {
          servingsPerContainer = 15
          netContent = '15 unit√©s'
        } else if (name.toLowerCase().includes('28')) {
          servingsPerContainer = 28
          netContent = '28 unit√©s'
        } else if (name.toLowerCase().includes('500ml')) {
          servingsPerContainer = 20
          netContent = '500ml'
          form = 'liquid'
          dosage = 'Prendre 25ml par jour'
        } else if (name.toLowerCase().includes('10')) {
          servingsPerContainer = 10
          netContent = '10 unit√©s'
        }

        // Generate tags based on category and name
        const tags = [
          'forte-pharma',
          'supplement',
          ...categoryName.toLowerCase().split(' ').filter(word => word.length > 2),
          ...name.toLowerCase().split(' ').slice(0, 3).filter(word => word.length > 2)
        ].filter((tag, index, arr) => arr.indexOf(tag) === index)

        // Create product
        await prisma.product.upsert({
          where: { slug },
          update: {},
          create: {
            brand_id: fortePharmaBrand.id,
            sku,
            slug,
            name,
            short_description: description.substring(0, 150) + '...',
            description,
            highlights,
            price,
            compare_at_price: Math.round(price * 1.2 * 100) / 100, // 20% markup for compare price
            currency: 'EUR',
            track_inventory: true,
            stock_quantity: Math.floor(Math.random() * 50) + 10, // Random stock between 10-60
            inventory_policy: 'deny',
            low_stock_threshold: 5,
            weight_kg: form === 'liquid' ? 0.5 : 0.1,
            gtin: `FP${Math.floor(Math.random() * 1000000000000).toString().padStart(12, '0')}`,
            ingredients: 'Composition d√©taill√©e disponible sur demande. Produit conforme aux normes europ√©ennes.',
            dosage,
            directions: 'Prendre avec un grand verre d\'eau. Ne pas d√©passer la dose recommand√©e.',
            warnings: 'Ne pas utiliser chez la femme enceinte ou allaitante sans avis m√©dical. Tenir hors de port√©e des enfants.',
            servings_per_container: servingsPerContainer,
            net_content: netContent,
            attributes: {
              ...attributes,
              form,
              brand: 'Forte Pharma',
              origin: 'France',
              category: categoryName
            },
            nutrition: {
              serving_size: '1 unit√©',
              servings_per_container: servingsPerContainer
            },
            badges: ['Made in France', 'Qualit√© Forte Pharma', 'Compl√©ment Alimentaire'],
            images: [{ url: localImageUrl, alt: name, type: "hero" }],
            video_urls: [],
            seo: {
              title: `${name} - Forte Pharma | Para Bell`,
              description: description.substring(0, 160),
              keywords: tags.slice(0, 5)
            },
            tags,
            is_active: true,
            is_featured: Math.random() > 0.7, // 30% chance of being featured
            published_at: new Date(),
            available_from: new Date(),
            avg_rating: Math.round((Math.random() * 2 + 3) * 10) / 10, // Random rating between 3.0-5.0
            reviews_count: Math.floor(Math.random() * 50) + 5, // Random reviews between 5-55
            total_sold: Math.floor(Math.random() * 200) + 10, // Random sales between 10-210
          },
        })

        importedCount++
        console.log(`‚úÖ Imported: ${name}`)

      } catch (error) {
        console.error(`‚ùå Error importing product:`, error)
        skippedCount++
      }
    }

    console.log(`üéâ Import completed!`)
    console.log(`‚úÖ Successfully imported: ${importedCount} products`)
    console.log(`‚ö†Ô∏è Skipped: ${skippedCount} products`)

  } catch (error) {
    console.error('‚ùå Import failed:', error)
    throw error
  }
}

// Run the import
importFortePharmaProducts()
  .catch((e) => {
    console.error('‚ùå Import script failed:', e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })
